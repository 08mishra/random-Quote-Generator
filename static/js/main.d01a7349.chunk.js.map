{"version":3,"sources":["Components/Random.js","App.js","reportWebVitals.js","index.js"],"names":["length","Quotes","Random","state","i","quote","text","author","increment","bind","decrement","this","setState","className","href","target","style","color","fontSize","disabled","onClick","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"o23LAIMA,EAASC,EAAOD,OAEDE,E,kDACjB,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,EAAG,EACHC,MAAOJ,EAAO,GAAGK,KACjBC,OAAQN,EAAO,GAAGM,QAGtB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBATP,E,6CAYd,WACIE,KAAKC,SAAS,CACVP,MAAOJ,EAAOU,KAAKR,MAAMC,EAAI,GAAGE,KAChCC,OAAQN,EAAOU,KAAKR,MAAMC,EAAI,GAAGG,OACjCH,EAAGO,KAAKR,MAAMC,EAAI,M,uBAI1B,WACIO,KAAKC,SAAS,CACVP,MAAOJ,EAAOU,KAAKR,MAAMC,EAAI,GAAGE,KAChCC,OAAQN,EAAOU,KAAKR,MAAMC,EAAI,GAAGG,OACjCH,EAAGO,KAAKR,MAAMC,EAAI,M,oBAgB1B,WACI,OAAS,qCAEL,sBACIS,UAAY,YADhB,UAEA,sBACIA,UAAY,MADhB,UAEA,oBACEC,KAAO,gCACTC,OAAS,SAFT,cAEsB,IAFtB,IAE4B,oBAC1BC,MACE,CAAEC,MAAO,QAASC,SAAU,QAChCL,UAAY,iBAHgB,UAI1B,IAJ0B,OAKxB,IAPJ,OAQI,IAVJ,OAWM,IAbN,IAaW,sBACPA,UAAY,iBADL,UAEX,mCACOF,KAAKR,MAAME,MADlB,OACiC,IAHtB,IAG2B,sBAClCQ,UAAY,SADsB,UAEtC,mCACOF,KAAKR,MAAMI,OADlB,OACkC,IAHI,OAIhC,IAPK,OAQL,IArBN,IAqBW,sBACPM,UAAY,mBADL,UAEX,yBACOM,SAA8B,IAAjBR,KAAKR,MAAMC,EAC/BgB,QAAYT,KAAKD,UACjBG,UAAY,SAHZ,UAIE,IAJF,YAKW,IALX,OAMS,IARE,IAQG,yBACPM,SAAaR,KAAKR,MAAMC,IAAMJ,EACrCoB,QAAYT,KAAKH,UACjBK,UAAY,SAHE,UAIZ,IAJY,QAKP,IALO,OAML,IAdE,OAeL,IApCN,OAqCM,IAvCD,W,GA1CmBQ,IAAMC,WCO3BC,MAVf,WACI,OAAS,mCAEL,cACA,EADA,OCMOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d01a7349.chunk.js","sourcesContent":["import \"./Random.css\";\r\nimport React from \"react\";\r\nimport Quotes from \"../Components/data.json\";\r\n\r\nconst length = Quotes.length;\r\n\r\nexport default class Random extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            i: 0,\r\n            quote: Quotes[0].text,\r\n            author: Quotes[0].author,\r\n        };\r\n\r\n        this.increment = this.increment.bind(this);\r\n        this.decrement = this.decrement.bind(this);\r\n    }\r\n\r\n    increment() {\r\n        this.setState({\r\n            quote: Quotes[this.state.i + 1].text,\r\n            author: Quotes[this.state.i + 1].author,\r\n            i: this.state.i + 1,\r\n        });\r\n    }\r\n\r\n    decrement() {\r\n        this.setState({\r\n            quote: Quotes[this.state.i - 1].text,\r\n            author: Quotes[this.state.i - 1].author,\r\n            i: this.state.i - 1,\r\n        });\r\n    }\r\n\r\n    // async componentDidMount() {\r\n    //     const url = \"https://type.fit/api/quotes\";\r\n    //     const data = await fetch(url);\r\n    //     const parsedData = data.json;\r\n    //     console.log(parsedData);\r\n\r\n    //     this.setState({\r\n    //         quote: parsedData[Math.floor(Math.random() * Quotes.length)].text,\r\n    //         author: parsedData[Math.floor(Math.random() * Quotes.length)].author,\r\n    //     });\r\n    // }\r\n\r\n    render() {\r\n        return ( <\r\n            >\r\n            <\r\n            div className = \"container\" >\r\n            <\r\n            div className = \"img\" >\r\n            <\r\n            a href = \"https://twitter.com/08_mishra\"\r\n            target = \"_blank\" > { \" \" } <\r\n            i style = {\r\n                { color: \"white\", fontSize: \"30px\" } }\r\n            className = \"fab fa-twitter\" >\r\n            { \" \" } <\r\n            /i>{\" \"} <\r\n            /a>{\" \"} <\r\n            /div>{\" \"} <\r\n            div className = \"container-text\" >\r\n            <\r\n            h3 > { this.state.quote } < /h3>{\" \"} <\r\n            div className = \"author\" >\r\n            <\r\n            h2 > { this.state.author } < /h2>{\" \"} <\r\n            /div>{\" \"} <\r\n            /div>{\" \"} <\r\n            div className = \"footer-container\" >\r\n            <\r\n            button disabled = { this.state.i === 0 }\r\n            onClick = { this.decrement }\r\n            className = \"button\" >\r\n            { \" \" }\r\n            Previous { \" \" } <\r\n            /button>{\" \"} <\r\n            button disabled = { this.state.i === length }\r\n            onClick = { this.increment }\r\n            className = \"button\" >\r\n            { \" \" }\r\n            Next { \" \" } <\r\n            /button>{\" \"} <\r\n            /div>{\" \"} <\r\n            /div>{\" \"} <\r\n            />\r\n        );\r\n    }\r\n}","import \"./App.css\";\nimport Random from \"./Components/Random\";\n\nfunction App() {\n    return ( <\n        >\n        <\n        Random / >\n        <\n        />\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}